{"version":3,"sources":["Layout/Header.js","Layout/NotFound.js","components/Home/CreateDeckButton.js","utils/api/index.js","components/Home/ShowDecks.js","components/Home/index.js","components/Decks/DeckForm.js","components/Decks/CreateDeck/Breadcrumb.js","components/Decks/CreateDeck/index.js","components/Decks/Deck/Breadcrumb.js","components/Decks/Deck/DisplayCards.js","components/Decks/Deck/View.js","components/Decks/Study/Breadcrumb.js","components/Decks/Study/NotEnoughCards.js","components/Decks/Study/DisplayCard.js","components/Decks/Study/index.js","components/Decks/EditDeck/Breadcrumb.js","components/Decks/EditDeck/index.js","components/Cards/AddCard/Breadcrumb.js","components/Cards/CardForm.js","components/Cards/AddCard/index.js","components/Cards/EditCard/Breadcrumb.js","components/Cards/EditCard/index.js","components/Cards/index.js","components/Decks/Deck/index.js","components/Decks/index.js","Layout/index.js","App.js","index.js"],"names":["Header","className","NotFound","CreateDeckButton","to","API_BASE_URL","process","REACT_APP_API_BASE_URL","headers","Headers","stripCards","deck","cards","fetchJson","url","options","a","fetch","response","status","Error","statusText","json","name","listDecks","signal","createDeck","method","body","JSON","stringify","readDeck","deckId","updatedDeck","id","deleteDeck","card","Number","readCard","cardId","updatedCard","append","ShowDecks","useState","decks","setDecks","useEffect","controller","AbortController","then","abort","history","useHistory","deckListings","map","length","description","onMouseDown","event","target","parentElement","style","backgroundColor","onClick","window","confirm","prevDeck","filter","item","push","Home","DeckForm","pathname","useLocation","isEdit","setIsEdit","setName","setDescription","newDeckId","Math","max","includes","htmlFor","type","value","placeholder","onChange","rows","updateDeck","Breadcrumb","CreateDeck","useParams","setDeck","getDeck","DisplayCards","useRouteMatch","setCards","getCards","front","back","deleteCard","prevCards","View","border","NotEnoughCards","allCards","DisplayCard","Card","setCard","Side","setSide","prevCard","Study","textAlign","EditDeck","CardForm","setFront","setBack","fetchCard","updateCard","createCard","parseInt","AddCard","EditCard","Cards","path","exact","Deck","Decks","Layout","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.86588636.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction Header() {\n  return (\n    <header className=\"jumbotron bg-dark\">\n      <div className=\"container text-white\">\n        <h1 className=\"display-4\">Flashcard-o-matic</h1>\n        <p className=\"lead\">Discover The Flashcard Difference.</p>\n      </div>\n    </header>\n  );\n}\n\nexport default Header;","import React from \"react\";\n\nfunction NotFound() {\n  return (\n    <div className=\"NotFound\">\n      <h1>Not Found</h1>\n    </div>\n  );\n}\n\nexport default NotFound;","import React from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nfunction CreateDeckButton() {\r\n  return (\r\n    <div className=\"row\">\r\n      <div className=\"col-sm-6 mb-1\">\r\n        <Link to=\"/decks/new\" className=\"btn btn-outline-primary\"><strong>+ Create Deck</strong></Link>\r\n      </div>\r\n    </div>  \r\n  )\r\n}\r\n\r\nexport default CreateDeckButton;","/**\n * Defines the base URL for the API.\n * The default values is overridden by the `API_BASE_URL` environment variable.\n */\n const API_BASE_URL = process.env.REACT_APP_API_BASE_URL || \"http://localhost:5000\";\n\n /**\n  * Defines the default headers for these functions to work with `json-server`\n  */\n const headers = new Headers();\n headers.append(\"Content-Type\", \"application/json\");\n \n /**\n  * Removes the `cards` property from the deck so it is not accidentally saved with the deck.\n  *\n  * This function is NOT exported because it is not needed outside of this file.\n  *\n  * @param deck\n  *  the deck instance\n  * @returns {*}\n  *  a copy of the deck instance with the `cards` property removed.\n  */\n function stripCards(deck) {\n   const { cards, ...deckWithoutCards } = deck;\n   return deckWithoutCards;\n }\n \n /**\n  * Fetch `json` from the specified URL and handle error status codes and ignore `AbortError`s\n  *\n  * This function is NOT exported because it is not needed outside of this file.\n  *\n  * @param url\n  *  the url for the requst.\n  * @param options\n  *  any options for fetch\n  * @returns {Promise<Error|any>}\n  *  a promise that resolves to the `json` data or an error.\n  *  If the response is not in the 200 - 399 range the promise is rejected.\n  */\n async function fetchJson(url, options) {\n   try {\n     const response = await fetch(url, options);\n     if (response.status < 200 || response.status > 399) {\n       throw new Error(`${response.status} - ${response.statusText}`);\n     }\n     return await response.json();\n   } catch (error) {\n     if (error.name !== \"AbortError\") {\n       throw error;\n     }\n   }\n }\n \n /**\n  * Retrieves all existing decks.\n  * @returns {Promise<[deck]>}\n  *  a promise that resolves to a possibly empty array of decks saved in the database.\n  */\n export async function listDecks(signal) {\n   const url = `${API_BASE_URL}/decks?_embed=cards`;\n   return await fetchJson(url, { signal });\n }\n \n /**\n  * Saves deck to the database (public/data/db.json).\n  * There is no validation done on the deck object, any object will be saved.\n  * @param deck\n  *  the deck to save, which must not have an `id` property\n  * @param signal\n  *  optional AbortController.signal\n  * @returns {Promise<deck>}\n  *  a promise that resolves the saved deck, which will now have an `id` property.\n  */\n export async function createDeck(deck, signal) {\n   const url = `${API_BASE_URL}/decks`;\n   const options = {\n     method: \"POST\",\n     headers,\n     body: JSON.stringify(stripCards(deck)),\n     signal,\n   };\n   return await fetchJson(url, options);\n }\n \n /**\n  * Retrieves the deck with the specified `deckId`\n  * @param deckId\n  *  the `id` property matching the desired deck.\n  * @param signal\n  *  optional AbortController.signal\n  * @returns {Promise<any>}\n  *  a promise that resolves to the saved deck.\n  */\n export async function readDeck(deckId, signal) {\n   const url = `${API_BASE_URL}/decks/${deckId}?_embed=cards`;\n   return await fetchJson(url, { signal });\n }\n \n /**\n  * Updates an existing deck\n  * @param updatedDeck\n  *  the deck to save, which must have an `id` property.\n  * @param signal\n  *  optional AbortController.signal\n  * @returns {Promise<Error|*>}\n  *  a promise that resolves to the updated deck.\n  */\n export async function updateDeck(updatedDeck, signal) {\n   const url = `${API_BASE_URL}/decks/${updatedDeck.id}?_embed=cards`;\n   const options = {\n     method: \"PUT\",\n     headers,\n     body: JSON.stringify(stripCards(updatedDeck)),\n     signal,\n   };\n   return await fetchJson(url, options);\n }\n \n /**\n  * Deletes the deck with the specified `deckId`.\n  * @param deckId\n  *  the id of the deck to delete\n  * @param signal\n  *  optional AbortController.signal\n  * @returns {Promise<Error|*>}\n  *  a promise that resolves to an empty object.\n  */\n export async function deleteDeck(deckId, signal) {\n   const url = `${API_BASE_URL}/decks/${deckId}`;\n   const options = { method: \"DELETE\", signal };\n   return await fetchJson(url, options);\n }\n \n /**\n  * Retrieves all cards associated with the specified `deckId`.\n  * @param deckId\n  *  the id of the target deck\n  * @param signal\n  *  optional AbortController.signal\n  * @returns {Promise<Error|*>}\n  *  a promise that resolves to a possible empty array of cards.\n  */\n export async function listCards(deckId, signal) {\n   const url = `${API_BASE_URL}/cards?deckId=${deckId}`;\n   return await fetchJson(url, { signal });\n }\n \n /**\n  * Creates a new card associated with the specified `deckId`.\n  * There is no validation that there is an existing deck with the specified `deckId`.\n  * @param deckId\n  *  the id of the target deck\n  * @param card\n  *  the card to create, which must not have an `id` property\n  * @param signal\n  *  optional AbortController.signal\n  * @returns {Promise<Error|*>}\n  *  a promise that resolves to the new card, which will have an `id` property.\n  */\n export async function createCard(deckId, card, signal) {\n   // There is a bug in json-server, if you post to /decks/:deckId/cards the associated deckId is a string\n   // and the card is not related to the deck because the data types of the ID's are different.\n   const url = `${API_BASE_URL}/decks/${deckId}/cards`;\n   card.deckId = Number(deckId);\n   const options = {\n     method: \"POST\",\n     headers,\n     body: JSON.stringify(card),\n     signal,\n   };\n   return await fetchJson(url, options);\n }\n \n /**\n  * Retrieves the card with the specified `cardId`\n  * @param cardId\n  *  the id of the target\n  * @param signal\n  *  optional AbortController.signal\n  * @returns {Promise<Error|*>}\n  *  a promise that resolves to the saved card.\n  */\n export async function readCard(cardId, signal) {\n   const url = `${API_BASE_URL}/cards/${cardId}`;\n   return await fetchJson(url, { signal });\n }\n \n /**\n  * Updates an existing deck\n  * @param updatedCard\n  *  the card to save, which must have an `id` property.\n  * @param signal\n  *  optional AbortController.signal\n  * @returns {Promise<Error|*>}\n  *  a promise that resolves to the updated card.\n  */\n export async function updateCard(updatedCard, signal) {\n   const url = `${API_BASE_URL}/cards/${updatedCard.id}`;\n   const options = {\n     method: \"PUT\",\n     headers,\n     body: JSON.stringify(updatedCard),\n   };\n   return await fetchJson(url, options);\n }\n \n /**\n  * Deletes the card with the specified `cardId`.\n  * @param cardId\n  *  the id of the card to delete\n  * @param signal\n  *  optional AbortController.signal\n  * @returns {Promise<Error|*>}\n  *  a promise that resolves to an empty object.\n  */\n export async function deleteCard(cardId, signal) {\n   const url = `${API_BASE_URL}/cards/${cardId}`;\n   const options = { method: \"DELETE\", signal };\n   return await fetchJson(url, options);\n }","import React, {useState, useEffect} from \"react\";\r\nimport {Link, useHistory} from \"react-router-dom\";\r\nimport { deleteDeck, listDecks } from \"./../../utils/api/index\";\r\n\r\nfunction ShowDecks() {\r\n\r\n  const [decks, setDecks] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const controller = new AbortController();\r\n    const signal = controller.signal;\r\n    listDecks(signal).then((decks) => listDecks(decks));\r\n    return () => controller.abort();\r\n  }, []);\r\n  const history = useHistory();\r\n\r\n   \r\n  // creates a card listing for each deck\r\n  const deckListings = decks.map((deck) => {\r\n    const cards = deck.cards;\r\n    \r\n    function handleDelete(event) {\r\n      if (window.confirm(\"Are you sure you want to delete this deck?\")) {\r\n        deleteDeck(deck.id);\r\n        setDecks(prevDeck => {\r\n          const newDeck = prevDeck.filter(item => item.id !== deck.id)\r\n          return newDeck;\r\n        })  \r\n      } else {\r\n        event.target.parentElement.parentElement.parentElement.style.backgroundColor = \"#fff\";\r\n        history.push(\"/\");\r\n      }\r\n    }\r\n    \r\n    return (\r\n      <div className=\"col-sm-6\" key={deck.id}>\r\n        <div className=\"card\">\r\n          <div className=\"card-body\">\r\n            <div className='d-flex justify-content-between'>\r\n              <h5 className=\"card-title\">{deck.name}</h5>\r\n              <p>{`${cards.length} cards`}</p>\r\n            </div>\r\n            <p className=\"card-text\">{deck.description}</p>\r\n            <div className=\"d-flex justify-content-between\">\r\n              <div>\r\n                <Link to={`/decks/${deck.id}`} className=\"btn btn-secondary mr-1\">View</Link>\r\n                <Link to={`/decks/${deck.id}/study`} className=\"btn btn-primary\">Study</Link>\r\n              </div>\r\n              <div>\r\n                <button className=\"btn btn-danger\" onMouseDown={(event) => event.target.parentElement.parentElement.parentElement.style.backgroundColor = \"#E8eff1\"} onClick={handleDelete}>Delete</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      )\r\n  })\r\n  \r\n  return (\r\n    <div className=\"row\">\r\n      {deckListings}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ShowDecks;","import React from \"react\";\r\nimport CreateDeckButton from \"./CreateDeckButton\";\r\nimport ShowDecks from \"./ShowDecks\";\r\n\r\nfunction Home() {\r\n  \r\n  return (\r\n    <div className=\"container\">\r\n      <CreateDeckButton />\r\n      <ShowDecks />\r\n    </div>\r\n  )\r\n} \r\n\r\nexport default Home;","import React, {useState, useEffect} from \"react\";\r\nimport {useHistory, useLocation} from \"react-router-dom\";\r\nimport { createDeck, updateDeck, listDecks } from \"../../utils/api/index\";\r\n\r\nfunction DeckForm({deck}) {\r\n  \r\n  const history = useHistory();\r\n  const {pathname} = useLocation();\r\n\r\n  const [isEdit, setIsEdit] = useState(true);\r\n  const [name, setName] = useState({\"name\": \"\"});\r\n  const [description, setDescription] = useState({\"description\": \"\"});\r\n\r\n  useEffect(() => {\r\n    function addOrEdit() {\r\n      if (pathname.includes(\"edit\")) {\r\n        setName({\"name\": deck.name});\r\n        setDescription({\"description\": deck.description});\r\n      } else {\r\n        setIsEdit(false);\r\n      } \r\n    }\r\n    addOrEdit();\r\n  }, [deck, pathname])\r\n\r\n  function handleName(event) {\r\n    setName({...name, \"name\": event.target.value});\r\n  }\r\n\r\n  function handleDescription(event) {\r\n    setDescription({...description, \"description\": event.target.value});\r\n  }\r\n \r\n  async function handleCreate() {\r\n    await createDeck({...name, ...description});\r\n    const response = await listDecks();\r\n    const newDeckId = Math.max(...response.map(deck => deck.id));\r\n    history.push(`/decks/${newDeckId}`);\r\n  }\r\n\r\n  function handleUpdate() {\r\n    updateDeck({\"id\": deck.id, ...name, ...description});\r\n    history.push(`/decks/${deck.id}`);\r\n  }\r\n  \r\n  return (\r\n    <>\r\n      <form>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"name\">Name:</label>\r\n          <input type=\"text\" className=\"form-control\" id=\"name\" value={name.name || ''} placeholder={isEdit ? null : \"Deck Name\"} onChange={handleName} />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"description\">Description:</label>\r\n          <textarea className=\"form-control\" id=\"description\" rows=\"3\" value={description.description || ''} placeholder={isEdit ? null : \"Brief Description of Deck\"} onChange={handleDescription}> </textarea>\r\n        </div>\r\n        \r\n        <button type=\"button\" className=\"btn btn-secondary mr-1\" onClick={() => history.push(isEdit ? `/decks/${deck.id}` : \"/\")}>Cancel</button>\r\n       \r\n        <button \r\n          type=\"button\"\r\n          className=\"btn btn-primary\"\r\n          onClick={isEdit ? handleUpdate : handleCreate}\r\n          >Submit\r\n        </button>\r\n\r\n      </form>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default DeckForm;","import React from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nfunction Breadcrumb() {\r\n  return (\r\n    <nav aria-label=\"breadcrumb\">\r\n    <ol className=\"breadcrumb\">\r\n      <li className=\"breadcrumb-item\"><Link to=\"/\">Home</Link></li>\r\n      <li className=\"breadcrumb-item active\" aria-current=\"page\">Create Deck</li>\r\n    </ol>\r\n  </nav> \r\n  )\r\n}\r\n\r\nexport default Breadcrumb;","import React from \"react\";\r\nimport DeckForm from \"./../DeckForm\";\r\nimport Breadcrumb from \"./Breadcrumb\";\r\n\r\nfunction CreateDeck() {\r\n\r\n  return (\r\n    <>\r\n      <Breadcrumb />\r\n      <h1>Create Deck</h1>\r\n      <DeckForm />\r\n    </>\r\n  ) \r\n}\r\n\r\nexport default CreateDeck;","import React, {useState, useEffect} from \"react\";\r\nimport {Link, useParams} from \"react-router-dom\";\r\nimport {readDeck} from \"./../../../utils/api/index\";\r\n\r\nfunction Breadcrumb() {\r\n  \r\n  const {deckId} = useParams();\r\n  const [deck, setDeck] = useState(null);\r\n\r\n  useEffect(() => {\r\n    async function getDeck() {\r\n      const response = await readDeck(deckId);\r\n      setDeck(response);\r\n    } \r\n    getDeck();\r\n  }, [deckId])\r\n  \r\n  if (!deck) return null;\r\n  return (\r\n    <nav aria-label=\"breadcrumb\">\r\n    <ol className=\"breadcrumb\">\r\n      <li className=\"breadcrumb-item\"><Link to=\"/\">Home</Link></li>\r\n      <li className=\"breadcrumb-item active\" aria-current=\"page\">{deck.name}</li>\r\n    </ol>\r\n  </nav>\r\n  )\r\n}\r\n\r\nexport default Breadcrumb;","import React, {useState, useEffect} from \"react\";\r\nimport { deleteCard, readDeck } from \"./../../../utils/api\";\r\nimport {Link, useRouteMatch, useHistory} from \"react-router-dom\";\r\n\r\nfunction DisplayCards({deck}) {\r\n  const {url} = useRouteMatch();\r\n  const history = useHistory();\r\n  \r\n  const [cards, setCards] = useState(null);\r\n\r\n  useEffect(() => {\r\n    async function getCards() {\r\n      const response = await readDeck(deck.id);\r\n      setCards(response.cards);\r\n    } \r\n    getCards();\r\n  }, [deck.id])\r\n\r\n  \r\n  if (!cards) return null;\r\n  return (\r\n    cards.map(card => {\r\n      \r\n      function handleDelete(event) {\r\n        if (window.confirm(\"Are you sure you want to delete this card?\")) {\r\n          deleteCard(card.id);\r\n          history.push(`${url}`);\r\n          setCards(prevCards => {\r\n            const newCards = prevCards.filter(item => item.id !== card.id)\r\n            return newCards;\r\n          })\r\n        } else {\r\n          event.target.parentElement.parentElement.style.backgroundColor = \"#fff\";\r\n          history.push(`${url}`)\r\n        }\r\n      }\r\n\r\n      return (\r\n        <div className=\"col-sm-6\" key={card.id}>\r\n          <div className=\"card\">\r\n            <div className=\"card-body\">\r\n              <p className=\"card-text\"><strong>Front: </strong>{card.front}</p>\r\n              <p className=\"card-text\"><strong>Back: </strong>{card.back}</p>\r\n              <div className= \"d-flex justify-content-end\">\r\n                <Link to={`${url}/cards/${card.id}/edit`}className=\"btn btn-secondary mr-1\">Edit</Link>\r\n                <button className=\"btn btn-danger\" onMouseDown={(event) => event.target.parentElement.parentElement.style.backgroundColor = \"#E8eff1\"} onClick={handleDelete}>Delete</button>\r\n              </div>  \r\n            </div>        \r\n          </div>\r\n        </div>\r\n      )\r\n    })\r\n  )\r\n}\r\n\r\nexport default DisplayCards;","import React, {useState, useEffect} from \"react\";\r\nimport {Link, useHistory, useRouteMatch, useParams} from \"react-router-dom\";\r\nimport { deleteDeck, readDeck } from \"../../../utils/api\";\r\nimport DisplayCards from \"./DisplayCards\";\r\n\r\nfunction View() {\r\n  const history = useHistory();\r\n  const {url} = useRouteMatch();\r\n  const {deckId} = useParams();\r\n  \r\n  const [deck, setDeck] = useState(null);\r\n\r\n  useEffect(() => {\r\n    async function getDeck() {\r\n      const response = await readDeck(deckId);\r\n      setDeck(response);\r\n    }\r\n    getDeck();\r\n    }, [deckId]);\r\n\r\n  if (!deck) return null;\r\n  return (\r\n    <> \r\n      <div className=\"col-sm-12 p-0\">\r\n        <div className=\"card\" style={{border: \"none\"}}>\r\n          <div className=\"card-body\">\r\n            <h5 className=\"card-title\">{deck.name}</h5>\r\n            <p className=\"card-text\">{deck.description}</p>\r\n            <div className=\"d-flex justify-content-between\">\r\n              <div>\r\n                <Link to={`${url}/edit`} className=\"btn btn-secondary mr-1\">Edit</Link>\r\n                <Link to={`${url}/study`} className=\"btn btn-primary mr-1\">Study</Link>\r\n                <Link to={`${url}/cards/new`} className=\"btn btn-primary\"><strong>+ Add Cards</strong></Link>\r\n              </div>\r\n              <div>\r\n                <button className=\"btn btn-danger\" onClick={() => {\r\n                        if (window.confirm(\"Are you sure you want to delete this deck?\")) {\r\n                          deleteDeck(deck.id);\r\n                          history.push(\"/\");\r\n                        } else {\r\n                          history.push(`${url}`);\r\n                        }\r\n                      }\r\n                    }>\r\n                      Delete\r\n                  </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"container\">\r\n        <h1>Cards</h1>\r\n      </div>\r\n      <DisplayCards deck={deck}/>\r\n    </>\r\n  )\r\n  \r\n}\r\n\r\nexport default View;","import React from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nfunction Breadcrumb({deck}) {\r\n  \r\n  return (\r\n    <nav aria-label=\"breadcrumb\">\r\n      <ol className=\"breadcrumb\">\r\n        <li className=\"breadcrumb-item\"><Link to=\"/\">Home</Link></li>\r\n        <li className=\"breadcrumb-item\"><Link to={`/decks/${deck.id}`}>{deck.name}</Link></li>\r\n        <li className=\"breadcrumb-item active\" aria-current=\"page\">Study</li>\r\n      </ol>\r\n    </nav>\r\n  )\r\n}\r\n \r\nexport default Breadcrumb;","import React from \"react\";\r\nimport {Link, useParams} from \"react-router-dom\";\r\n\r\nfunction NotEnoughCards({allCards}) {\r\n  const {deckId} = useParams();\r\n  \r\n  return (\r\n    <>\r\n      <h1>Not Enough Cards</h1>\r\n      <p>You need at least 3 cards to study. You have {allCards.length} cards in your deck.</p>\r\n      <Link to={`/decks/${deckId}/cards/new`} type=\"button\" className=\"btn btn-primary\"><strong>+ Add Cards</strong></Link>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default NotEnoughCards; ","import React, {useState} from \"react\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport NotEnoughCards from \"./NotEnoughCards\";\r\n\r\nfunction DisplayCard({deck}) {\r\n  const history = useHistory();\r\n  \r\n  const [Card, setCard] = useState(0);\r\n  const [Side, setSide] = useState(true);\r\n\r\n  const allCards = deck.cards;\r\n\r\n  function handleFlip() {\r\n    setSide(!Side);\r\n  }\r\n \r\n  function handleNext() {\r\n    setCard(prevCard => prevCard + 1);\r\n    setSide(true); // sets side to front when switching to another card\r\n    if (Card === allCards.length - 1) {\r\n      return window.confirm(\"Restart Cards?\") ? setCard(0) : history.push(\"/\");\r\n    }\r\n  }\r\n\r\n  function handlePrev() {\r\n    setCard(prevCard => prevCard - 1);\r\n    setSide(true);\r\n  }\r\n  \r\n  if (allCards.length < 3) {\r\n    return <NotEnoughCards allCards={allCards} />\r\n  }\r\n  return (\r\n    <div className=\"row py-2 d-flex justify-content-center\">\r\n      <div className=\"col-sm-6\">\r\n        <div className=\"card\">\r\n          <div className=\"card-body\">\r\n            <h5 className=\"card-title\">Card {Card + 1} of {allCards.length}</h5>\r\n            <p className=\"card-text\">{Side ? allCards[Card].front : allCards[Card].back}</p>\r\n            { Card >= 1 ? <button id=\"previous\" className=\"btn btn-primary\" onClick={handlePrev}>Previous</button> : null}\r\n            <button className=\"btn btn-secondary mx-2\" onClick={handleFlip}>Flip</button>\r\n            {!Side ? <button className=\"btn btn-primary\" onClick={handleNext}>Next</button> : null}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default DisplayCard;","import React, { useState, useEffect } from \"react\";\r\nimport {useParams} from \"react-router-dom\";\r\nimport { readDeck } from \"../../../utils/api\";\r\nimport Breadcrumb from \"./Breadcrumb\";\r\nimport DisplayCard from \"./DisplayCard\";\r\n\r\nfunction Study() {\r\n  const {deckId} = useParams();\r\n  const [deck, setDeck] = useState(null);\r\n\r\n  useEffect(() => {\r\n    async function getDeck() {\r\n      const response = await readDeck(deckId);\r\n      setDeck(response);\r\n    }\r\n    getDeck();\r\n  }, [deckId])\r\n  \r\n  if (!deck) return null;\r\n  return (\r\n    <>\r\n      <Breadcrumb deck={deck}/>\r\n      <h1 style={{textAlign:\"center\"}}>{`Study: ${deck.name}`}</h1>\r\n      <DisplayCard deck={deck}/>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Study;","import React from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nfunction Breadcrumb({deck}) {\r\n  \r\n  return (\r\n    <nav aria-label=\"breadcrumb\">\r\n    <ol className=\"breadcrumb\">\r\n      <li className=\"breadcrumb-item\"><Link to=\"/\">Home</Link></li>\r\n      <li className=\"breadcrumb-item\"><Link to={`/decks/${deck.id}`}>{deck.name}</Link></li>\r\n      <li className=\"breadcrumb-item active\" aria-current=\"page\">Edit Deck</li>\r\n    </ol>\r\n  </nav>\r\n  )\r\n} \r\n\r\nexport default Breadcrumb;","import React, { useState, useEffect } from \"react\";\r\nimport {useParams} from \"react-router-dom\";\r\nimport { readDeck } from \"../../../utils/api\";\r\nimport Breadcrumb from \"./Breadcrumb\";\r\nimport DeckForm from \"./../DeckForm\";\r\n\r\nfunction EditDeck() {\r\n  \r\n  const {deckId} = useParams();\r\n  const [deck, setDeck] = useState(null);\r\n\r\n  useEffect(() => {\r\n    async function getDeck() {\r\n      const response = await readDeck(deckId);\r\n      setDeck(response);\r\n    } \r\n    getDeck();\r\n  }, [deckId])\r\n  \r\n  if (!deck) return null;\r\n  return (\r\n    <>\r\n    <Breadcrumb deck={deck}/>\r\n    <h1>Edit Deck</h1>\r\n    <DeckForm deck={deck} />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default EditDeck;","import React from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nfunction Breadcrumb({deck}) {\r\n  return (\r\n    <nav aria-label=\"breadcrumb\">\r\n    <ol className=\"breadcrumb\">\r\n      <li className=\"breadcrumb-item\"><Link to=\"/\">Home</Link></li>\r\n      <li className=\"breadcrumb-item\"><Link to={`/decks/${deck.id}`}>{deck.name}</Link></li>\r\n      <li className=\"breadcrumb-item active\" aria-current=\"page\">Add Card</li>\r\n    </ol>\r\n  </nav>\r\n  )\r\n} \r\n\r\nexport default Breadcrumb;","import React, {useState, useEffect} from \"react\";\r\nimport {useHistory, useParams, useLocation} from \"react-router-dom\";\r\nimport { createCard, updateCard, readCard } from \"../../utils/api/index\";\r\n\r\nfunction CardForm({deck}) {\r\n  \r\n  const history = useHistory();\r\n  const {cardId, deckId} = useParams();\r\n  const {pathname} = useLocation();\r\n\r\n  const [isEdit, setIsEdit] = useState(null);\r\n  const [front, setFront] = useState({\"front\": \"\"});\r\n  const [back, setBack] = useState({\"back\": \"\"});\r\n\r\n  useEffect(() => {\r\n    async function fetchCard() {\r\n      const response = await readCard(cardId);\r\n      setFront({\"front\": response.front});\r\n      setBack({\"back\": response.back});\r\n    }\r\n    function addOrEdit() {\r\n      if (pathname.includes(\"new\")) {\r\n        setIsEdit(false);\r\n      } else {\r\n          setIsEdit(true);\r\n          fetchCard();\r\n      }\r\n    }\r\n    addOrEdit();\r\n  }, [pathname, cardId])\r\n\r\n  function handleFront(event) {\r\n    setFront({...front, \"front\": event.target.value});\r\n  }\r\n\r\n  function handleBack(event) {\r\n    setBack({...back, \"back\": event.target.value});\r\n  }\r\n \r\n  function handleCancelAndDone() {\r\n    history.push(`/decks/${deckId}`);\r\n  }\r\n\r\n  function handleUpdate() {\r\n    updateCard({\"id\": cardId, \"deckId\": deck.id, ...front, ...back});\r\n    history.push(`/decks/${deck.id}`);\r\n  }\r\n\r\n  function handleSave() {\r\n    createCard(parseInt(deckId), {...front, ...back});\r\n    setFront({\"front\": \"\"});\r\n    setBack({\"back\": \"\"});\r\n  }\r\n  \r\n  if (!front || !back) return null;\r\n  return (\r\n    <>\r\n      <form>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"front\">Front:</label>\r\n          <textarea className=\"form-control\" id=\"front\" rows=\"3\" placeholder={isEdit ? null :\"Front side of card\"} value={front.front} onChange={handleFront}></textarea>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"back\">Back:</label>\r\n          <textarea className=\"form-control\" id=\"back\" rows=\"3\" placeholder={isEdit ? null : \"Back side of card\"} value={back.back} onChange={handleBack}></textarea>\r\n        </div>\r\n        \r\n        <button \r\n          type=\"button\"\r\n          className=\"btn btn-secondary mr-1\"\r\n          onClick={handleCancelAndDone}>\r\n          {isEdit ? \"Cancel\" : \"Done\"}\r\n        </button>\r\n\r\n        <button \r\n          type=\"button\"\r\n          className=\"btn btn-primary\"\r\n          onClick={isEdit ? handleUpdate : handleSave}\r\n          >Save\r\n        </button>\r\n\r\n      </form>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default CardForm;","import React from \"react\";\r\nimport Breadcrumb from \"./Breadcrumb\";\r\nimport CardForm from \"./../CardForm\";\r\n\r\nfunction AddCard({deck}) {\r\n  return (\r\n    <>\r\n      <Breadcrumb deck={deck}/>\r\n      <h1>{`${deck.name}: Add Card`}</h1>\r\n      <CardForm deck={deck}/>\r\n    </>\r\n  )\r\n}\r\n \r\nexport default AddCard;","import React from \"react\";\r\nimport {Link, useParams} from \"react-router-dom\";\r\n\r\nfunction Breadcrumb({deck}) {\r\n  \r\n  const {cardId} = useParams();\r\n\r\n  return (\r\n    <nav aria-label=\"breadcrumb\">\r\n    <ol className=\"breadcrumb\">\r\n      <li className=\"breadcrumb-item\"><Link to=\"/\">Home</Link></li>\r\n      <li className=\"breadcrumb-item\"><Link to={`/decks/${deck.id}`}>{deck.name}</Link></li>\r\n      <li className=\"breadcrumb-item active\" aria-current=\"page\">{`Edit Card ${cardId}`}</li>\r\n    </ol>\r\n  </nav> \r\n  )\r\n}\r\n\r\nexport default Breadcrumb;","import React from \"react\";\r\nimport Breadcrumb from \"./Breadcrumb\";\r\nimport CardForm from \"./../CardForm\";\r\n\r\n\r\nfunction EditCard({deck}) {\r\n    \r\n  return (\r\n    <>\r\n      <Breadcrumb deck={deck} />\r\n      <h1>Edit Card</h1>\r\n      <CardForm deck={deck} />\r\n    </>\r\n  )\r\n} \r\n\r\nexport default EditCard;","import React, {useState, useEffect} from \"react\";\r\nimport {Switch, Route, useRouteMatch, useParams} from \"react-router-dom\";\r\nimport AddCard from \"./AddCard/index\";\r\nimport EditCard from \"./EditCard/index\";\r\nimport { readDeck } from \"../../utils/api\";\r\n\r\nfunction Cards() {\r\n  const {path} = useRouteMatch();\r\n  const {deckId} = useParams();\r\n\r\n  const [deck, setDeck] = useState(null);\r\n\r\n  useEffect(() => {\r\n    async function getDeck() {\r\n      const response = await readDeck(deckId);\r\n      setDeck(response);\r\n    }\r\n    getDeck(); \r\n  }, [deckId])\r\n\r\n  if (!deck) return null;\r\n  return (\r\n    <>\r\n      <Switch>\r\n        <Route exact path={`${path}/new`}>\r\n          <AddCard deck={deck} />\r\n        </Route>\r\n        <Route path={`${path}/:cardId/edit`}>\r\n          <EditCard deck={deck} />\r\n        </Route>\r\n      </Switch>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Cards;","import React from \"react\";\r\nimport Breadcrumb from \"./Breadcrumb\";\r\nimport {Switch, Route, useRouteMatch} from \"react-router-dom\";\r\nimport View from \"./View\";\r\nimport Study from \"./../Study/index\";\r\nimport EditDeck from \"./../EditDeck/index\";\r\nimport Cards from \"./../../Cards/index\";\r\n\r\n\r\nfunction Deck() {\r\n  const {path} = useRouteMatch();\r\n\r\n  return ( \r\n    <>\r\n      <Switch>\r\n        <Route exact path={`${path}`}>\r\n          <Breadcrumb />\r\n          <div className=\"row\">\r\n            <View />\r\n          </div>\r\n        </Route>\r\n        <Route path={`${path}/study`}>\r\n          <Study />\r\n        </Route>\r\n        <Route path={`${path}/edit`}>\r\n          <EditDeck />\r\n        </Route>\r\n        <Route path={`${path}/cards`}>\r\n          <Cards />\r\n        </Route>\r\n      </Switch>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Deck;","import React from \"react\";\r\nimport {Switch, Route} from \"react-router-dom\";\r\nimport CreateDeck from \"./CreateDeck/index\";\r\nimport Deck from \"./Deck/index\";\r\n\r\nfunction Decks() {\r\n  return (\r\n    <Switch>\r\n      <Route path=\"/decks/new\">\r\n        <CreateDeck />\r\n      </Route>\r\n      <Route path=\"/decks/:deckId\">\r\n        <Deck />\r\n      </Route>\r\n    </Switch>\r\n  )\r\n} \r\n\r\nexport default Decks;","\nimport React from \"react\";\nimport {Switch, Route} from \"react-router-dom\";\nimport Header from \"./Header\";\nimport NotFound from \"./NotFound\";\nimport Home from \"./../components/Home/index\";\nimport Decks from \"./../components/Decks/index\";\n\nfunction Layout() {\n\n  return (\n    <>\n      <Header />\n      <div className=\"container\">\n        <Switch>\n          <Route exact path=\"/\">\n            <Home />\n          </Route>\n          <Route path=\"/decks\"> \n            <Decks />\n          </Route>\n          <Route>\n            <NotFound />\n          </Route>\n        </Switch>\n      </div>\n    </>\n  );\n}\n\nexport default Layout;","import React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport Layout from \"./Layout/index.js\";\n\n/**\n * App is a wrapper for <Layout>, you should not need to change this file.\n */\n\nfunction App() {\n  return (\n    <div className=\"app-routes\">\n      <Switch>\n        <Route path=\"/\">\n          <Layout />\n        </Route>\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}