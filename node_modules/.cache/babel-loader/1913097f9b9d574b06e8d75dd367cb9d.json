{"ast":null,"code":"var _jsxFileName = \"C:\\\\Thinkful\\\\my-code-samples\\\\Module-31-2\\\\src\\\\components\\\\Cards\\\\CardForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useHistory, useParams, useLocation } from \"react-router-dom\";\nimport { createCard, updateCard, readCard } from \"../../utils/api/index\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction CardForm(_ref) {\n  _s();\n\n  let {\n    deck\n  } = _ref;\n  const history = useHistory();\n  const {\n    cardId,\n    deckId\n  } = useParams();\n  const {\n    pathname\n  } = useLocation();\n  const [isEdit, setIsEdit] = useState(null);\n  const [front, setFront] = useState({\n    \"front\": \"\"\n  });\n  const [back, setBack] = useState({\n    \"back\": \"\"\n  });\n  useEffect(() => {\n    async function fetchCard() {\n      const response = await readCard(cardId);\n      setFront({\n        \"front\": response.front\n      });\n      setBack({\n        \"back\": response.back\n      });\n    }\n\n    function addOrEdit() {\n      if (pathname.includes(\"new\")) {\n        setIsEdit(false);\n      } else {\n        setIsEdit(true);\n        fetchCard();\n      }\n    }\n\n    addOrEdit();\n  }, [pathname, cardId]);\n\n  function handleFront(event) {\n    setFront({ ...front,\n      \"front\": event.target.value\n    });\n  }\n\n  function handleBack(event) {\n    setBack({ ...back,\n      \"back\": event.target.value\n    });\n  }\n\n  function handleCancelAndDone() {\n    history.push(`/decks/${deckId}`);\n  }\n\n  function handleUpdate() {\n    updateCard({\n      \"id\": cardId,\n      \"deckId\": deck.id,\n      ...front,\n      ...back\n    });\n    history.push(`/decks/${deck.id}`);\n  }\n\n  function handleSave() {\n    createCard(parseInt(deckId), { ...front,\n      ...back\n    });\n    setFront({\n      \"front\": \"\"\n    });\n    setBack({\n      \"back\": \"\"\n    });\n  }\n\n  if (!front || !back) return null;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"front\",\n          children: \"Front:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          className: \"form-control\",\n          id: \"front\",\n          rows: \"3\",\n          placeholder: isEdit ? null : \"Front side of card\",\n          value: front.front,\n          onChange: handleFront\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"back\",\n          children: \"Back:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          className: \"form-control\",\n          id: \"back\",\n          rows: \"3\",\n          placeholder: isEdit ? null : \"Back side of card\",\n          value: back.back,\n          onChange: handleBack\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"btn btn-secondary mr-1\",\n        onClick: handleCancelAndDone,\n        children: isEdit ? \"Cancel\" : \"Done\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"btn btn-primary\",\n        onClick: isEdit ? handleUpdate : handleSave,\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(CardForm, \"4zyvfRw67mFV9Z5kiSQbW2npew4=\", false, function () {\n  return [useHistory, useParams, useLocation];\n});\n\n_c = CardForm;\nexport default CardForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"CardForm\");","map":{"version":3,"sources":["C:/Thinkful/my-code-samples/Module-31-2/src/components/Cards/CardForm.js"],"names":["React","useState","useEffect","useHistory","useParams","useLocation","createCard","updateCard","readCard","CardForm","deck","history","cardId","deckId","pathname","isEdit","setIsEdit","front","setFront","back","setBack","fetchCard","response","addOrEdit","includes","handleFront","event","target","value","handleBack","handleCancelAndDone","push","handleUpdate","id","handleSave","parseInt"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from \"react\";\r\nimport {useHistory, useParams, useLocation} from \"react-router-dom\";\r\nimport { createCard, updateCard, readCard } from \"../../utils/api/index\";\r\n\r\nfunction CardForm({deck}) {\r\n  \r\n  const history = useHistory();\r\n  const {cardId, deckId} = useParams();\r\n  const {pathname} = useLocation();\r\n\r\n  const [isEdit, setIsEdit] = useState(null);\r\n  const [front, setFront] = useState({\"front\": \"\"});\r\n  const [back, setBack] = useState({\"back\": \"\"});\r\n\r\n  useEffect(() => {\r\n    async function fetchCard() {\r\n      const response = await readCard(cardId);\r\n      setFront({\"front\": response.front});\r\n      setBack({\"back\": response.back});\r\n    }\r\n    function addOrEdit() {\r\n      if (pathname.includes(\"new\")) {\r\n        setIsEdit(false);\r\n      } else {\r\n          setIsEdit(true);\r\n          fetchCard();\r\n      }\r\n    }\r\n    addOrEdit();\r\n  }, [pathname, cardId])\r\n\r\n  function handleFront(event) {\r\n    setFront({...front, \"front\": event.target.value});\r\n  }\r\n\r\n  function handleBack(event) {\r\n    setBack({...back, \"back\": event.target.value});\r\n  }\r\n \r\n  function handleCancelAndDone() {\r\n    history.push(`/decks/${deckId}`);\r\n  }\r\n\r\n  function handleUpdate() {\r\n    updateCard({\"id\": cardId, \"deckId\": deck.id, ...front, ...back});\r\n    history.push(`/decks/${deck.id}`);\r\n  }\r\n\r\n  function handleSave() {\r\n    createCard(parseInt(deckId), {...front, ...back});\r\n    setFront({\"front\": \"\"});\r\n    setBack({\"back\": \"\"});\r\n  }\r\n  \r\n  if (!front || !back) return null;\r\n  return (\r\n    <>\r\n      <form>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"front\">Front:</label>\r\n          <textarea className=\"form-control\" id=\"front\" rows=\"3\" placeholder={isEdit ? null :\"Front side of card\"} value={front.front} onChange={handleFront}></textarea>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"back\">Back:</label>\r\n          <textarea className=\"form-control\" id=\"back\" rows=\"3\" placeholder={isEdit ? null : \"Back side of card\"} value={back.back} onChange={handleBack}></textarea>\r\n        </div>\r\n        \r\n        <button \r\n          type=\"button\"\r\n          className=\"btn btn-secondary mr-1\"\r\n          onClick={handleCancelAndDone}>\r\n          {isEdit ? \"Cancel\" : \"Done\"}\r\n        </button>\r\n\r\n        <button \r\n          type=\"button\"\r\n          className=\"btn btn-primary\"\r\n          onClick={isEdit ? handleUpdate : handleSave}\r\n          >Save\r\n        </button>\r\n\r\n      </form>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default CardForm;"]},"metadata":{},"sourceType":"module"}