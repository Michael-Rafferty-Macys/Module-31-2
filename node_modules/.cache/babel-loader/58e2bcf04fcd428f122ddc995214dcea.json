{"ast":null,"code":"var _jsxFileName = \"C:\\\\Thinkful\\\\my-code-samples\\\\Module-31-2\\\\src\\\\components\\\\Decks\\\\DeckForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport { createDeck, updateDeck, listDecks } from \"../../utils/api/index\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction DeckForm(_ref) {\n  _s();\n\n  let {\n    deck\n  } = _ref;\n  const history = useHistory();\n  const {\n    pathname\n  } = useLocation();\n  const [isEdit, setIsEdit] = useState(true);\n  const [name, setName] = useState({\n    \"name\": \"\"\n  });\n  const [description, setDescription] = useState({\n    \"description\": \"\"\n  });\n  useEffect(() => {\n    function addOrEdit() {\n      if (pathname.includes(\"edit\")) {\n        setName({\n          \"name\": deck.name\n        });\n        setDescription({\n          \"description\": deck.description\n        });\n      } else {\n        setIsEdit(false);\n      }\n    }\n\n    addOrEdit();\n  }, [deck, pathname]);\n\n  function handleName(event) {\n    setName({ ...name,\n      \"name\": event.target.value\n    });\n  }\n\n  function handleDescription(event) {\n    setDescription({ ...description,\n      \"description\": event.target.value\n    });\n  }\n\n  async function handleCreate() {\n    await createDeck({ ...name,\n      ...description\n    });\n    const response = await listDecks();\n    const newDeckId = Math.max(...response.map(deck => deck.id));\n    history.push(`/decks/${newDeckId}`);\n  }\n\n  function handleUpdate() {\n    updateDeck({\n      \"id\": deck.id,\n      ...name,\n      ...description\n    });\n    history.push(`/decks/${deck.id}`);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: \"Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          id: \"name\",\n          value: name.name || '',\n          placeholder: isEdit ? null : \"Deck Name\",\n          onChange: handleName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"description\",\n          children: \"Description:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          className: \"form-control\",\n          id: \"description\",\n          rows: \"3\",\n          value: description.description || '',\n          placeholder: isEdit ? null : \"Brief Description of Deck\",\n          onChange: handleDescription,\n          children: \" \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"btn btn-secondary mr-1\",\n        onClick: () => history.push(isEdit ? `/decks/${deck.id}` : \"/\"),\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"btn btn-primary\",\n        onClick: isEdit ? handleUpdate : handleCreate,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(DeckForm, \"AXP6nRz+A7cZjghJCNX4cYXcuTI=\", false, function () {\n  return [useHistory, useLocation];\n});\n\n_c = DeckForm;\nexport default DeckForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"DeckForm\");","map":{"version":3,"sources":["C:/Thinkful/my-code-samples/Module-31-2/src/components/Decks/DeckForm.js"],"names":["React","useState","useEffect","useHistory","useLocation","createDeck","updateDeck","listDecks","DeckForm","deck","history","pathname","isEdit","setIsEdit","name","setName","description","setDescription","addOrEdit","includes","handleName","event","target","value","handleDescription","handleCreate","response","newDeckId","Math","max","map","id","push","handleUpdate"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from \"react\";\r\nimport {useHistory, useLocation} from \"react-router-dom\";\r\nimport { createDeck, updateDeck, listDecks } from \"../../utils/api/index\";\r\n\r\nfunction DeckForm({deck}) {\r\n  \r\n  const history = useHistory();\r\n  const {pathname} = useLocation();\r\n\r\n  const [isEdit, setIsEdit] = useState(true);\r\n  const [name, setName] = useState({\"name\": \"\"});\r\n  const [description, setDescription] = useState({\"description\": \"\"});\r\n\r\n  useEffect(() => {\r\n    function addOrEdit() {\r\n      if (pathname.includes(\"edit\")) {\r\n        setName({\"name\": deck.name});\r\n        setDescription({\"description\": deck.description});\r\n      } else {\r\n        setIsEdit(false);\r\n      } \r\n    }\r\n    addOrEdit();\r\n  }, [deck, pathname])\r\n\r\n  function handleName(event) {\r\n    setName({...name, \"name\": event.target.value});\r\n  }\r\n\r\n  function handleDescription(event) {\r\n    setDescription({...description, \"description\": event.target.value});\r\n  }\r\n \r\n  async function handleCreate() {\r\n    await createDeck({...name, ...description});\r\n    const response = await listDecks();\r\n    const newDeckId = Math.max(...response.map(deck => deck.id));\r\n    history.push(`/decks/${newDeckId}`);\r\n  }\r\n\r\n  function handleUpdate() {\r\n    updateDeck({\"id\": deck.id, ...name, ...description});\r\n    history.push(`/decks/${deck.id}`);\r\n  }\r\n  \r\n  return (\r\n    <>\r\n      <form>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"name\">Name:</label>\r\n          <input type=\"text\" className=\"form-control\" id=\"name\" value={name.name || ''} placeholder={isEdit ? null : \"Deck Name\"} onChange={handleName} />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"description\">Description:</label>\r\n          <textarea className=\"form-control\" id=\"description\" rows=\"3\" value={description.description || ''} placeholder={isEdit ? null : \"Brief Description of Deck\"} onChange={handleDescription}> </textarea>\r\n        </div>\r\n        \r\n        <button type=\"button\" className=\"btn btn-secondary mr-1\" onClick={() => history.push(isEdit ? `/decks/${deck.id}` : \"/\")}>Cancel</button>\r\n       \r\n        <button \r\n          type=\"button\"\r\n          className=\"btn btn-primary\"\r\n          onClick={isEdit ? handleUpdate : handleCreate}\r\n          >Submit\r\n        </button>\r\n\r\n      </form>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default DeckForm;"]},"metadata":{},"sourceType":"module"}