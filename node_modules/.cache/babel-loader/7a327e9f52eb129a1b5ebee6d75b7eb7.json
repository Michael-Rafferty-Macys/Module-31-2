{"ast":null,"code":"import _objectSpread from\"C:\\\\Thinkful\\\\my-code-samples\\\\Module-31-2\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\objectSpread2.js\";import _asyncToGenerator from\"C:\\\\Thinkful\\\\my-code-samples\\\\Module-31-2\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\asyncToGenerator.js\";import _slicedToArray from\"C:\\\\Thinkful\\\\my-code-samples\\\\Module-31-2\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\slicedToArray.js\";import _regeneratorRuntime from\"C:\\\\Thinkful\\\\my-code-samples\\\\Module-31-2\\\\node_modules\\\\@babel\\\\runtime\\\\regenerator\\\\index.js\";import React,{useState,useEffect}from\"react\";import{useHistory,useParams,useLocation}from\"react-router-dom\";import{createCard,updateCard,readCard}from\"../../utils/api/index\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";function CardForm(_ref){var deck=_ref.deck;var history=useHistory();var _useParams=useParams(),cardId=_useParams.cardId,deckId=_useParams.deckId;var _useLocation=useLocation(),pathname=_useLocation.pathname;var _useState=useState(null),_useState2=_slicedToArray(_useState,2),isEdit=_useState2[0],setIsEdit=_useState2[1];var _useState3=useState({\"front\":\"\"}),_useState4=_slicedToArray(_useState3,2),front=_useState4[0],setFront=_useState4[1];var _useState5=useState({\"back\":\"\"}),_useState6=_slicedToArray(_useState5,2),back=_useState6[0],setBack=_useState6[1];useEffect(function(){function fetchCard(){return _fetchCard.apply(this,arguments);}function _fetchCard(){_fetchCard=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var response;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return readCard(cardId);case 2:response=_context.sent;setFront({\"front\":response.front});setBack({\"back\":response.back});case 5:case\"end\":return _context.stop();}}},_callee);}));return _fetchCard.apply(this,arguments);}function addOrEdit(){if(pathname.includes(\"new\")){setIsEdit(false);}else{setIsEdit(true);fetchCard();}}addOrEdit();},[pathname,cardId]);function handleFront(event){setFront(_objectSpread(_objectSpread({},front),{},{\"front\":event.target.value}));}function handleBack(event){setBack(_objectSpread(_objectSpread({},back),{},{\"back\":event.target.value}));}function handleCancelAndDone(){history.push(\"/decks/\".concat(deckId));}function handleUpdate(){updateCard(_objectSpread(_objectSpread({\"id\":cardId,\"deckId\":deck.id},front),back));history.push(\"/decks/\".concat(deck.id));}function handleSave(){createCard(parseInt(deckId),_objectSpread(_objectSpread({},front),back));setFront({\"front\":\"\"});setBack({\"back\":\"\"});}if(!front||!back)return null;return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsxs(\"form\",{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"front\",children:\"Front:\"}),/*#__PURE__*/_jsx(\"textarea\",{className:\"form-control\",id:\"front\",rows:\"3\",placeholder:isEdit?null:\"Front side of card\",value:front.front,onChange:handleFront})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"back\",children:\"Back:\"}),/*#__PURE__*/_jsx(\"textarea\",{className:\"form-control\",id:\"back\",rows:\"3\",placeholder:isEdit?null:\"Back side of card\",value:back.back,onChange:handleBack})]}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"btn btn-secondary mr-1\",onClick:handleCancelAndDone,children:isEdit?\"Cancel\":\"Done\"}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"btn btn-primary\",onClick:isEdit?handleUpdate:handleSave,children:\"Save\"})]})});}export default CardForm;","map":{"version":3,"sources":["C:/Thinkful/my-code-samples/Module-31-2/src/components/Cards/CardForm.js"],"names":["React","useState","useEffect","useHistory","useParams","useLocation","createCard","updateCard","readCard","CardForm","deck","history","cardId","deckId","pathname","isEdit","setIsEdit","front","setFront","back","setBack","fetchCard","response","addOrEdit","includes","handleFront","event","target","value","handleBack","handleCancelAndDone","push","handleUpdate","id","handleSave","parseInt"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from \"react\";\r\nimport {useHistory, useParams, useLocation} from \"react-router-dom\";\r\nimport { createCard, updateCard, readCard } from \"../../utils/api/index\";\r\n\r\nfunction CardForm({deck}) {\r\n  \r\n  const history = useHistory();\r\n  const {cardId, deckId} = useParams();\r\n  const {pathname} = useLocation();\r\n\r\n  const [isEdit, setIsEdit] = useState(null);\r\n  const [front, setFront] = useState({\"front\": \"\"});\r\n  const [back, setBack] = useState({\"back\": \"\"});\r\n\r\n  useEffect(() => {\r\n    async function fetchCard() {\r\n      const response = await readCard(cardId);\r\n      setFront({\"front\": response.front});\r\n      setBack({\"back\": response.back});\r\n    }\r\n    function addOrEdit() {\r\n      if (pathname.includes(\"new\")) {\r\n        setIsEdit(false);\r\n      } else {\r\n          setIsEdit(true);\r\n          fetchCard();\r\n      }\r\n    }\r\n    addOrEdit();\r\n  }, [pathname, cardId])\r\n\r\n  function handleFront(event) {\r\n    setFront({...front, \"front\": event.target.value});\r\n  }\r\n\r\n  function handleBack(event) {\r\n    setBack({...back, \"back\": event.target.value});\r\n  }\r\n \r\n  function handleCancelAndDone() {\r\n    history.push(`/decks/${deckId}`);\r\n  }\r\n\r\n  function handleUpdate() {\r\n    updateCard({\"id\": cardId, \"deckId\": deck.id, ...front, ...back});\r\n    history.push(`/decks/${deck.id}`);\r\n  }\r\n\r\n  function handleSave() {\r\n    createCard(parseInt(deckId), {...front, ...back});\r\n    setFront({\"front\": \"\"});\r\n    setBack({\"back\": \"\"});\r\n  }\r\n  \r\n  if (!front || !back) return null;\r\n  return (\r\n    <>\r\n      <form>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"front\">Front:</label>\r\n          <textarea className=\"form-control\" id=\"front\" rows=\"3\" placeholder={isEdit ? null :\"Front side of card\"} value={front.front} onChange={handleFront}></textarea>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"back\">Back:</label>\r\n          <textarea className=\"form-control\" id=\"back\" rows=\"3\" placeholder={isEdit ? null : \"Back side of card\"} value={back.back} onChange={handleBack}></textarea>\r\n        </div>\r\n        \r\n        <button \r\n          type=\"button\"\r\n          className=\"btn btn-secondary mr-1\"\r\n          onClick={handleCancelAndDone}>\r\n          {isEdit ? \"Cancel\" : \"Done\"}\r\n        </button>\r\n\r\n        <button \r\n          type=\"button\"\r\n          className=\"btn btn-primary\"\r\n          onClick={isEdit ? handleUpdate : handleSave}\r\n          >Save\r\n        </button>\r\n\r\n      </form>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default CardForm;"]},"metadata":{},"sourceType":"module"}