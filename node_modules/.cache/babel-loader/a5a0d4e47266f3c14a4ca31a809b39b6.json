{"ast":null,"code":"var _jsxFileName = \"C:\\\\Thinkful\\\\my-code-samples\\\\Module-31-2\\\\src\\\\components\\\\Decks\\\\Deck\\\\View.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Link, useHistory, useRouteMatch, useParams } from \"react-router-dom\";\nimport { deleteDeck, readDeck } from \"../../../utils/api\";\nimport DisplayCards from \"./DisplayCards\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction View() {\n  _s();\n\n  const history = useHistory();\n  const {\n    url\n  } = useRouteMatch();\n  const {\n    deckId\n  } = useParams();\n  const [deck, setDeck] = useState(null);\n  useEffect(() => {\n    async function getDeck() {\n      const response = await readDeck(deckId);\n      setDeck(response);\n    }\n\n    getDeck();\n  }, [deckId]);\n  if (!deck) return null;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-sm-12 p-0\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        style: {\n          border: \"none\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-body\",\n          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n            className: \"card-title\",\n            children: deck.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"card-text\",\n            children: deck.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"d-flex justify-content-between\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(Link, {\n                to: `${url}/edit`,\n                className: \"btn btn-secondary mr-1\",\n                children: \"Edit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 31,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Link, {\n                to: `${url}/study`,\n                className: \"btn btn-primary mr-1\",\n                children: \"Study\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 32,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Link, {\n                to: `${url}/cards/new`,\n                className: \"btn btn-primary\",\n                children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"+ Add Cards\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 33,\n                  columnNumber: 75\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 33,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-danger\",\n                onClick: () => {\n                  if (window.confirm(\"Are you sure you want to delete this deck?\")) {\n                    deleteDeck(deck.id);\n                    history.push(\"/\");\n                  } else {\n                    history.push(`${url}`);\n                  }\n                },\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 36,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Cards\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DisplayCards, {\n      deck: deck\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(View, \"kSg2zJmwCh0f5JaiE2U46Q01Tdo=\", false, function () {\n  return [useHistory, useRouteMatch, useParams];\n});\n\n_c = View;\nexport default View;\n\nvar _c;\n\n$RefreshReg$(_c, \"View\");","map":{"version":3,"sources":["C:/Thinkful/my-code-samples/Module-31-2/src/components/Decks/Deck/View.js"],"names":["React","useState","useEffect","Link","useHistory","useRouteMatch","useParams","deleteDeck","readDeck","DisplayCards","View","history","url","deckId","deck","setDeck","getDeck","response","border","name","description","window","confirm","id","push"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from \"react\";\r\nimport {Link, useHistory, useRouteMatch, useParams} from \"react-router-dom\";\r\nimport { deleteDeck, readDeck } from \"../../../utils/api\";\r\nimport DisplayCards from \"./DisplayCards\";\r\n\r\nfunction View() {\r\n  const history = useHistory();\r\n  const {url} = useRouteMatch();\r\n  const {deckId} = useParams();\r\n  \r\n  const [deck, setDeck] = useState(null);\r\n\r\n  useEffect(() => {\r\n    async function getDeck() {\r\n      const response = await readDeck(deckId);\r\n      setDeck(response);\r\n    }\r\n    getDeck();\r\n    }, [deckId]);\r\n\r\n  if (!deck) return null;\r\n  return (\r\n    <> \r\n      <div className=\"col-sm-12 p-0\">\r\n        <div className=\"card\" style={{border: \"none\"}}>\r\n          <div className=\"card-body\">\r\n            <h5 className=\"card-title\">{deck.name}</h5>\r\n            <p className=\"card-text\">{deck.description}</p>\r\n            <div className=\"d-flex justify-content-between\">\r\n              <div>\r\n                <Link to={`${url}/edit`} className=\"btn btn-secondary mr-1\">Edit</Link>\r\n                <Link to={`${url}/study`} className=\"btn btn-primary mr-1\">Study</Link>\r\n                <Link to={`${url}/cards/new`} className=\"btn btn-primary\"><strong>+ Add Cards</strong></Link>\r\n              </div>\r\n              <div>\r\n                <button className=\"btn btn-danger\" onClick={() => {\r\n                        if (window.confirm(\"Are you sure you want to delete this deck?\")) {\r\n                          deleteDeck(deck.id);\r\n                          history.push(\"/\");\r\n                        } else {\r\n                          history.push(`${url}`);\r\n                        }\r\n                      }\r\n                    }>\r\n                      Delete\r\n                  </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"container\">\r\n        <h1>Cards</h1>\r\n      </div>\r\n      <DisplayCards deck={deck}/>\r\n    </>\r\n  )\r\n  \r\n}\r\n\r\nexport default View;"]},"metadata":{},"sourceType":"module"}